{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/Aqib/ReactJS%20Projects/todo-app/app/api/lib/mongodb.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.MONGODB_URI as string;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Please define the MONGODB_URI environment variable\");\n}\n\nconst cached = (global as any).mongoose || { conn: null, promise: null };\n\nexport const connectDB = async () => {\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    cached.promise = mongoose\n      .connect(MONGODB_URI, {\n        bufferCommands: false,\n      })\n      .then((mongoose) => mongoose);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n};\n\n(global as any).mongoose = cached;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAS,AAAC,OAAe,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAEhE,MAAM,YAAY;IACvB,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CACtB,OAAO,CAAC,aAAa;YACpB,gBAAgB;QAClB,GACC,IAAI,CAAC,CAAC,WAAa;IACxB;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;AAEC,OAAe,QAAQ,GAAG","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/Aqib/ReactJS%20Projects/todo-app/app/api/lib/models/Todo.ts"],"sourcesContent":["import { Schema, model, models } from \"mongoose\";\n\nconst TodoSchema = new Schema({\n  name: { type: String, required: true },\n  price: { type: Number, required: true },\n});\n\nexport const Todo = models.Todo || model(\"Todo\", TodoSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC5B,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;AACxC;AAEO,MAAM,OAAO,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,QAAQ","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/Aqib/ReactJS%20Projects/todo-app/app/api/todo/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { connectDB } from \"../lib/mongodb\";\nimport { Todo } from \"../lib/models/Todo\";\n\nexport async function POST(req: Request) {\n  try {\n    await connectDB();\n    const { name, price } = await req.json();\n\n    if (!name || !price) {\n      return NextResponse.json(\n        { error: \"Name and Price are required\" },\n        { status: 400 }\n      );\n    }\n\n    const newTodo = new Todo({ name, price });\n    await newTodo.save();\n\n    return NextResponse.json(\n      { message: \"Todo added successfully!\" },\n      { status: 201 }\n    );\n  } catch (error) {\n    return NextResponse.json(\n      { error: \"Server error\", errorObj: error },\n      { status: 500 }\n    );\n  }\n}\n\n// New GET handler to fetch all Todos\nexport async function GET() {\n  try {\n    console.log(\"CALLING API\");\n    await connectDB();\n    const todos = await Todo.find();\n    console.log(\"API CALLED\", todos);\n\n    return NextResponse.json({ todos }, { status: 200 });\n  } catch (error) {\n    return NextResponse.json(\n      { error: \"Server error\", errorObj: error },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;QACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAEtC,IAAI,CAAC,QAAQ,CAAC,OAAO;YACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA8B,GACvC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,IAAI,qIAAA,CAAA,OAAI,CAAC;YAAE;YAAM;QAAM;QACvC,MAAM,QAAQ,IAAI;QAElB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA2B,GACtC;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAgB,UAAU;QAAM,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;QACd,MAAM,QAAQ,MAAM,qIAAA,CAAA,OAAI,CAAC,IAAI;QAC7B,QAAQ,GAAG,CAAC,cAAc;QAE1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM,GAAG;YAAE,QAAQ;QAAI;IACpD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAAgB,UAAU;QAAM,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}